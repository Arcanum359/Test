Тестовое задание №1:
Имеется устройство с МК, например STM32F103. Необходимо организовать взаимодействие по бинарному протоколу на интерфейсе UART. Схема – «запрос-ответ», устройство – ведомый. При получении корректного пакета должен быть ответ в том же формате и содержимым, но с установленным старшим битом поля «тип».
Формат пакета:
struct Packet {
	uint8_t preamble;	// преамбула = 0xFF
	uint8_t cnt;		// счетчик пакетов
	uint8_t type;		// тип пакета
	uint8_t length;		// длина поля данных
	uint8_t data[255 + 1];	// массив данных, плюс место под CRC8
}; 
Скорость 460800, пакеты переменной длины, CRC8 со стандартным образующим полиномом, например, из 1-wire, считается по всему пакету, начиная с преамбулы.
Требования к алгоритму:
Минимальное использование вычислительных ресурсов;
Отказоустойчивость
Как результат, хотелось бы увидеть основные моменты в виде кода с пояснениями. Например, писать кодом инициализацию периферии нет необходимости, можно заменить словесным описанием.

Тестовое задание №2:
Для любого МК (можно для того же, что и в задании №1) разработать ПО, которое должно выполнять:
Опрос АЦП с частотой 100 Гц и усреднение измеренных значений с заранее определенным количеством этих значений - 32. Сохранение результата в отдельную переменную
Изменять состояние выхода порта с частотой 300 Гц
Изменять состояние выхода порта с частотой 1 кГц
Изменять состояние выхода порта с частотой 10 кГц
Изменения состояния портов необходимо проводить при помощи собственной переменной, объявленной как struct и содержащей битовые перемнные. Например, запись myPORT.B1 = 1 меняет состояние вывода выбранного порта в 1
Исходные коды необходимо разместить на любом доступном Git сервере
Файлы с исходными кодами должны содержать комментарии- описания функций и перемнных